library(tidyverse)
library(caTools)
library(ggcorrplot)
library(fastDummies)
library(ggfortify)
library(olsrr)
library(car)
library(GGally)
library(RColorBrewer)
library(ggplot2)
library(tibble)




coul = brewer.pal(12, "Set3")





#Dataset
df <- read.csv("C:\\Users\\18572\\OneDrive\\Documents\\Data Analytics and Visualization with R\\Ecommerce_Customers (1).csv", header=T)
df




head(df)
tail(df)
df_clean <- subset(df, select = colnames(df[4:8]))
colnames(df_clean)




#Analysis
corr <- (cor(df_clean[,-9]))

ggcorrplot(corr, hc.order = F, outline.col = "white",lab = TRUE, title= "Correlation heatmap")

ggpairs(df_clean, title="Correlation Pairplot")

summary(df_clean)


y = df_clean$Yearly.Amount.Spent
x= df_clean$Length.of.Membership





par(mfrow=c(3, 2))
boxplot(df_clean$Avg..Session.Length, col = 'red')
boxplot(df_clean$Time.on.App, col = 'green')
boxplot(df_clean$Time.on.Website,  col = 'yellow')
boxplot(df_clean$Length.of.Membership,  col = 'blue')
boxplot(df_clean$Yearly.Amount.Spent,  col = 'orange')






par(mfrow=c(1, 1))

set.seed(41)
split = sample.split(df_clean$Yearly.Amount.Spent, SplitRatio = 0.8)
training_set = subset(df_clean, split == TRUE)
test_set = subset(df_clean, split == FALSE)







#Simple Linear Regression with entire dataset
model = lm(formula = Yearly.Amount.Spent ~ Length.of.Membership, data = df_clean)
summary(model)


autoplot(model, which = 1:6, nrow= 2, ncol= 3, label.size = 3)


qqPlot(model$residuals, ylab ='Residuals', main='Normality Test')



#library("olsrr")
#ols_plot_cooksd_bar(regression_multi, print_plot = TRUE)
#autoplot(regression_multi, which = 1:6, nrow= 2, ncol= 3, label.size = 3)



outliers <- c(13,19,25,39,51,62,66,94,153,201,206,220,226,288,290,300,304,306,310,313,369,375,414,416,443,465)
'%ni%' <- Negate('%in%')
df_no <- subset(df_clean, y %ni% y[outliers] )


m = lm(formula = Yearly.Amount.Spent ~ Length.of.Membership,data = df_no)
summary(m)



#Graph
par(mfrow=c(1, 2))
plot(model$residuals, main = "With Outliers", ylab = "Residuals")
plot(m$residuals, main = "Without Outliers", ylab = "Residuals")







#Fitting Simple Linear Regression to the Training set
regressor = lm(formula = Yearly.Amount.Spent ~ Length.of.Membership, data = training_set)




#Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)

x1 = seq(1, 100, by=1)




#Visualising the Prediction 
ggplot() +
  geom_point(aes(x = x1, y = y_pred), colour = 'Blue') +
  ggtitle('Amount Spent vs Length of Membership (Prediction)') +
  xlab('User corresponding to the Test Set') +
  ylab('Yearly Amount Spent')








#Visualising the Train set results
ggplot() +
  geom_point(aes(x = training_set$Length.of.Membership, y = training_set$Yearly.Amount.Spent), colour = 'red') +
  geom_line(aes(x = training_set$Length.of.Membership, y = predict(regressor, newdata = training_set)), colour = 'blue') +
  ggtitle('Amount Spent vs Length of Membership (Training set)') +
  xlab('Length of Membership') +
  ylab('Yearly Amount Spent')






#Visualising the Test set results
ggplot() +
  geom_point(aes(x = test_set$Length.of.Membership, y = test_set$Yearly.Amount.Spent), colour = 'red') +
  geom_line(aes(x = training_set$Length.of.Membership, y = predict(regressor, newdata = training_set)), colour = 'blue') +
  ggtitle('Amount Spent vs Length of Membership (Test set)') +
  xlab('Length of Membership') +
  ylab('Yearly Amount Spent')








#One Sample t.test
t.test(df_clean$Length.of.Membership, mu=4,alternative = "two.sided", conf.level = 0.95)

abs(qt(0.025, df = 499))

ggplot(df, aes(x=x, y=y, 
               color=x)) + 
  geom_point(aes(size=y)) +
  labs(title="Length of Membership Vs Amount Spent", x = "Length of Membership", y = "Amount Spent") +
  geom_smooth(method=lm, formula =  y ~ x)







#Building linear regression classification models
#Using various columns


colnames(training_set)



m <- lm(formula = Yearly.Amount.Spent ~ Avg..Session.Length, data = training_set)
summary(m)


m <- lm(formula = Yearly.Amount.Spent ~ Avg..Session.Length+Time.on.App+ Length.of.Membership,data = training_set)
summary(m)


m <- lm(formula = Yearly.Amount.Spent ~.,data = training_set)
summary(m)




Anova(m, type = "III")
m_1 <- aov(formula = Yearly.Amount.Spent ~ Avg..Session.Length+Time.on.App+ Length.of.Membership,data = training_set)
summary(m_1)


qf(0.05, 4, 495)
length_group <- cut(round(x,1), breaks = c(-1,2,3.5,5.5), labels = c("New","Average","Old"))


df_clean$group = cut(round(x,1),c(0,2,3.5,5.5),labels = c("New","Average","Old"))


df_clean$group <- as.character(df_clean$group)
df_clean$group <- ifelse(is.na(df_clean$group), 'Old', df_clean$group)
summary(df_clean)



ggplot(df_clean, aes(x=group, y=Yearly.Amount.Spent, fill=group)) + 
  geom_boxplot(outlier.colour="red", outlier.shape=8,outlier.size=2, notch=FALSE) +
  labs(title="Box plot - Yearly Amount Spent", x = "Groups", y = "Amount Spent")






m <- aov(Yearly.Amount.Spent~group, data=df_clean)
summary(m)


TukeyHSD(m)






m <- lm(Yearly.Amount.Spent~group + Length.of.Membership, data = df_clean)
Anova(m, type="III")




### The least square means
lsmeans::lsmeans(m, specs = "group")



